curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 && chmod +x minikube
mv ./.kube ~/goinfre/ && mv ./.minikube ~/goinfre && ln -s ~/goinfre/.kube .kube && ln -s ~/goinfre/.minikube .minikube

# MINIKUBE
./minikube start --vm-driver=virtualbox
./minikube status
./minikube dashboard
./minikube stop
./minikube delete
./minikube addons list
./minikube addons enable metallb

eval $(./minikube docker-env)

# PODS
kubectl apply -f wordpress.yaml
kubectl get pods wordpress
kubectl delete pods wordpress
kubectl logs wordpress
kubectl describe pods wordpress

# DEPLOYMENT
kubectl apply -f configmap.yaml 
kubectl apply -f wordpress.yaml 
kubectl get deploy wordpress-deployment 
kubectl delete deploy wordpress-deployment 

# SERVICE
kubectl get svc
kubectl delete svc wordpress-svc

# DOCKER
docker build -t wordpress_image .
docker image rm wordpress_image



kubectl delete pods wordpress && docker image rm wordpress_image && docker build -t wordpress_image . && kubectl apply -f wordpress.yaml 
kubectl delete pods wordpress && kubectl apply -f wordpress.yaml 

kubectl delete deploy wordpress-deployment && kubectl apply -f configmap.yaml

docker build -t wordpress_image . && kubectl apply -f configmap.yaml && kubectl apply -f wordpress.yaml  

./minikube delete && ./minikube start --vm-driver=virtualbox && ./minikube addons enable metallb && eval $(./minikube docker-env) \
&& docker build -t wordpress_image . && kubectl apply -f wordpress.yaml  &&  kubectl apply -f configmap.yaml && ./minikube dashboard 

./minikube delete && ./minikube start --vm-driver=virtualbox && ./minikube addons enable metallb && eval $(./minikube docker-env) \
&& docker build -t phpmyadmin_image . && kubectl apply -f phpmyadmin.yaml  &&  kubectl apply -f configmap.yaml && ./minikube dashboard 

kubectl delete deploy wordpress-deployment && kubectl delete svc wordpress-svc && docker build -t wordpress_image . && kubectl apply -f wordpress.yaml  &&  kubectl apply -f configmap.yaml && ./minikube dashboard 
kubectl delete deploy phpmyadmin-deployment && kubectl delete svc phpmyadmin-svc && docker build -t phpmyadmin_image . && kubectl apply -f phpmyadmin.yaml  &&  kubectl apply -f configmap.yaml && ./minikube dashboard 

./minikube delete && ./minikube start --vm-driver=virtualbox && ./minikube addons enable metallb \
&& eval $(./minikube docker-env) && docker build -t phpmyadmin_image ./phpmyadmin && docker build -t mysql_image ./mysql \
&& kubectl apply -f ./phpmyadmin/phpmyadmin.yaml  &&  kubectl apply -f ./phpmyadmin/configmap.yaml \
&& kubectl apply -f ./mysql/mysql.yaml && ./minikube dashboard 

kubectl delete deploy mysql-deployment && kubectl delete svc mysql-svc && docker build -t mysql_image ./mysql \
&& kubectl apply -f mysql/mysql.yaml \
&& kubectl delete deploy phpmyadmin-deployment && kubectl delete svc phpmyadmin-svc && docker build -t phpmyadmin_image ./phpmyadmin \
&& kubectl apply -f phpmyadmin/configmap.yaml && kubectl apply -f phpmyadmin/phpmyadmin.yaml && ./minikube dashboard 



./minikube delete && ./minikube start --vm-driver=virtualbox && ./minikube addons enable metallb && eval $(./minikube docker-env) \
&& docker build -t mysql_image ./mysql && kubectl apply -f mysql/mysql.yaml \
&& docker build -t phpmyadmin_image ./phpmyadmin && kubectl apply -f phpmyadmin/configmap.yaml && kubectl apply -f phpmyadmin/phpmyadmin.yaml \
&& docker build -t wordpress_image ./wordpress && kubectl apply -f wordpress/wordpress.yaml \
&& docker build -t nginx_image ./nginx && kubectl apply -f nginx/nginx.yaml \
&& docker build -t ftps_image ./ftps && kubectl apply -f ftps/ftps.yaml \
&& docker build -t grafana_image ./grafana && kubectl apply -f grafana/grafana.yaml \
&& docker build -t influxdb_image ./influxdb && kubectl apply -f influxdb/influxdb.yaml && ./minikube dashboard    

kubectl delete pvc mysql-pv-claim && kubectl delete pv mysql-pv-volume

kubectl delete deploy mysql-deployment && kubectl delete svc mysql-svc && docker build -t mysql_image ./mysql \
&& kubectl apply -f mysql/mysql.yaml \
&& kubectl delete deploy phpmyadmin-deployment && kubectl delete svc phpmyadmin-svc && docker build -t phpmyadmin_image ./phpmyadmin \
&& kubectl apply -f phpmyadmin/configmap.yaml && kubectl apply -f phpmyadmin/phpmyadmin.yaml \
&& kubectl delete deploy wordpress-deployment && kubectl delete svc wordpress-svc && docker build -t wordpress_image ./wordpress \
&& kubectl apply -f wordpress/wordpress.yaml \
&& kubectl delete deploy nginx-deployment && kubectl delete svc nginx-svc && docker build -t nginx_image ./nginx \
&& kubectl apply -f nginx/nginx.yaml \
&& kubectl delete deploy ftps-deployment && kubectl delete svc ftps-svc && docker build -t ftps_image ./ftps \
&& kubectl apply -f ftps/ftps.yaml \
&& kubectl delete deploy grafana-deployment && kubectl delete svc grafana-svc && docker build -t grafana_image ./grafana \
&& kubectl apply -f grafana/grafana.yaml \
&& kubectl delete deploy influxdb-deployment && kubectl delete svc influxdb-svc && docker build -t influxdb_image ./influxdb \
&& kubectl apply -f influxdb/influxdb.yaml \
&& ./minikube dashboard    

kubectl apply -f phpmyadmin/configmap.yaml


kubectl expose deployment mysql-deployment --port 3306 --type=ClusterIP 
kubectl expose deployment phpmyadmin-deployment --type=LoadBalancer 

kubectl exec /deploy/wordpress_deployment -- pkill wordpress

etc/ssh/

show databases
show users

+ rc-service influxdb start 
+ influx -precision rfc3339 
+ create database mydb 
+ create user admin with password 'admin' with all privileges 

но сначала надо настройки поменять затем в докерфайли скопировать этот конф в /etc/telegraf/ и прописать в supervisore
./telegraf-1.17.3/usr/bin/telegraf --config /etc/telegraf/telegraf.conf
cd ./grafana-7.3.7/bin/ 
&& ./grafana-server 

открываем графану в браузере
URL http://127.0.0.1:8086
Databse mydb
User admin
Pass admin
Save&test и ждать

influxdb-svc:8086

docker build -t ftps_image ./ftps_test && kubectl apply -f ftps_test/ftps.yaml && kubectl apply -f ftps_test/configmap.yaml \
&& ./minikube dashboard

kubectl delete deploy ftps-deployment && kubectl delete svc ftps-svc && docker build -t ftps_image ./ftps_test \
&& kubectl apply -f ftps_test/ftps.yaml && kubectl apply -f ftps_test/configmap.yaml && ./minikube dashboard 